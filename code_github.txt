############################## get sra from SRR from SRA toolkit#############################wget --output-document sratoolkit.tar.gz http://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/current/sratoolkit.current-ubuntu64.tar.gz######################################### run the nexflow ChIP-seq pipeline by creating an environment under screen########################################screen -S chipseq module load Anaconda2/5.3.0wget -qO- https://get.nextflow.io | bashmodule load Nextflow/19.10.0conda create -n nextflow-env nextflowconda activate nextflow-envnextflow run nf-core/chipseq -c parameter_SE.config -profile conda############################### parameter setting of the config file##############################params.input = 'CG12_1_design.csv'params.genome = 'GRCh38'params.save_reference = trueparams.email = 'gloria.wu@med.lu.se'prarms.email_on_fail = 'gloria.wu@med.lu.se'params.project = 'lu2022-7-3'params.single_end = trueparams.narrow_peak = trueresume = trueworkDir = '/home/gloriawu/snic2020-12-1/working/Cistrome'params.max_memory = '60.GB'params.outdir = '/home/gloriawu/snic2020-12-1/ChIP/analysis2022/12_1_5573_narrow'###################################### merge BAM files of replicates and call peaks######################################!/bin/bash -eu#SBATCH -A LU2022-7-3#SBATCH -n 12#SBATCH -t 08:00:00#load modulesmodule load GCC/4.9.3-2.25  OpenMPI/1.10.2module load icc/2015.3.187-GNU-4.9.3-2.25  impi/5.0.3.048module load ifort/2015.3.187-GNU-4.9.3-2.25  impi/5.0.3.048module load MACS2/2.1.0.20150731-Python-2.7.11set -euxo pipefail# set HOMEMYHOME=/home/gloriawu/snic2020-12-1/ChIP/analysis2022# input filesBAM1=$MYHOME/34_46025_narrow/bwa/mergedLibrary/Cis_GATA1_34_1_R1.mLb.clN.sorted.bamBAM2=$MYHOME/34_46025_narrow/bwa/mergedLibrary/Cis_GATA1_34_1_R2.mLb.clN.sorted.bamBAM3=$MYHOME/erythroblast_1_narrow/bwa/mergedLibrary/GATA1_eryth_1_R1.mLb.clN.sorted.bamBAM4=$MYHOME/erythroblast_1_narrow/bwa/mergedLibrary/GATA1_eryth_1_R2.mLb.clN.sorted.bamcontrol1=$MYHOME/34_46025_narrow/bwa/mergedLibrary/WT_CONTROL_R1.mLb.clN.sorted.bamcontrol2=$MYHOME/erythroblast_1_narrow/bwa/mergedLibrary/WT_CONTROL_R1.mLb.clN.sorted.bamOUT=$MYHOME/GATA1/GATA1_GE34_merge_# run macs2 call peakmacs2 callpeak -t $BAM1 $BAM2 $BAM3 $BAM4 -c $control1 $control2 -g hs --outdir $MYHOME/GATA1 -n $OUT -B -q 0.01########################## merge narrow peak files##########################!/bin/bash -eu#SBATCH -A LU2022-7-3#SBATCH -n 6#SBATCH -t 04:00:00set -euxo pipefailmodule load GCC/5.4.0-2.26module load OpenMPI/1.10.3module load impi/2017.1.132module load BEDTools/2.26.0cd /home/gloriawu/snic2020-12-1/ChIP/analysis2022/GATA1/bedtools intersect -a Cis_GATA1_3_peaks.narrowPeak -b Cis_GATA1_12_1_peaks.narrowPeak Cis_GATA1_12_2_peaks.narrowPeak GATA1_GE34_merge__peaks.narrowPeak -c > Intersect_with_Cis_3_GATA1_adult.bed######################################### get fasta file on the merged bed files with hg38#########################################!/bin/bash -u#SBATCH -A LU2022-7-3#SBATCH -n 8#SBATCH -t 8:00:00set -euxo pipefailmodule load GCC/5.4.0-2.26module load OpenMPI/1.10.3module load impi/2017.1.132module load BEDTools/2.26.0bedtools getfasta -name -fi /home/gloriawu/reference/hg38/hg38.fa -bed /home/gloriawu/snic2020-12-1/ChIP/analysis2022/GATA1/Intersect_with_Cis_3_GATA1_adult.bed -fo /home/gloriawu/snic2020-12-1/ChIP/analysis2022/GATA1/intersect/Intersect_with_Cis_3_GATA1_adult.fa######################################## Find GATA1 motif with FIMO from MEME suite#########################################!/bin/bash -e#SBATCH -A LU2022-7-3#SBATCH -n 8#SBATCH -t 12:00:00set -euxo pipefailmodule load GCC/7.3.0-2.30module load OpenMPI/3.1.1module load MEME/5.0.4fimo --thresh 1e-3 --max-stored-scores 1000000 --oc /home/gloriawu/snic2020-12-1/ChIP/analysis2022/GATA1/intersect/Intersect_Cis_3_FIMO35_3 MA0035.3.meme /home/gloriawu/snic2020-12-1/ChIP/analysis2022/GATA1/intersect/Intersect_with_Cis_3_GATA1_adult.fa## rename the filemv fimo.tsv Intersect_Cis_3_GATA1_FIMO35_3.tsv################################ sort file structure using open Refine################################Load tsv file, create project # split sequence_name by ::# delete empty column (sequence_name 2)# separate sequence_name 4 by -# rename sequence name column titles# split sequence_name 1 by /# remove all other columns but sequence_name 1 8, which is the ID for peaks# rename sequence_name 1 8 to sequence name# remove the first two columns which are the motif_id and motif_alt_id# sort by sequence name# move sequence_name columne to the 4th column to allow typical bed files at the start# make start and stop numbers# create column to calculate the motif start and motif stop# reorder columns [  {    "op": "core/column-split",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "sequence_name",    "guessCellType": true,    "removeOriginalColumn": true,    "mode": "separator",    "separator": ":",    "regex": false,    "maxColumns": 0,    "description": "Split column sequence_name by separator"  },  {    "op": "core/column-removal",    "columnName": "sequence_name 2",    "description": "Remove column sequence_name 2"  },  {    "op": "core/column-split",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "sequence_name 4",    "guessCellType": true,    "removeOriginalColumn": true,    "mode": "separator",    "separator": "-",    "regex": false,    "maxColumns": 0,    "description": "Split column sequence_name 4 by separator"  },  {    "op": "core/column-rename",    "oldColumnName": "sequence_name 3",    "newColumnName": "chr",    "description": "Rename column sequence_name 3 to chr"  },  {    "op": "core/column-rename",    "oldColumnName": "sequence_name 4 1",    "newColumnName": "peak_start",    "description": "Rename column sequence_name 4 1 to peak_start"  },  {    "op": "core/column-rename",    "oldColumnName": "sequence_name 4 2",    "newColumnName": "peak_end",    "description": "Rename column sequence_name 4 2 to peak_end"  },  {    "op": "core/column-split",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "sequence_name 1",    "guessCellType": true,    "removeOriginalColumn": true,    "mode": "separator",    "separator": "/",    "regex": false,    "maxColumns": 0,    "description": "Split column sequence_name 1 by separator"  },  {    "op": "core/column-removal",    "columnName": "sequence_name 1 1",    "description": "Remove column sequence_name 1 1"  },  {    "op": "core/column-removal",    "columnName": "sequence_name 1 2",    "description": "Remove column sequence_name 1 2"  },  {    "op": "core/column-removal",    "columnName": "sequence_name 1 3",    "description": "Remove column sequence_name 1 3"  },  {    "op": "core/column-removal",    "columnName": "sequence_name 1 4",    "description": "Remove column sequence_name 1 4"  },  {    "op": "core/column-removal",    "columnName": "sequence_name 1 5",    "description": "Remove column sequence_name 1 5"  },  {    "op": "core/column-removal",    "columnName": "sequence_name 1 6",    "description": "Remove column sequence_name 1 6"  },  {    "op": "core/column-removal",    "columnName": "sequence_name 1 7",    "description": "Remove column sequence_name 1 7"  },  {    "op": "core/column-rename",    "oldColumnName": "sequence_name 1 8",    "newColumnName": "sequence_name",    "description": "Rename column sequence_name 1 8 to sequence_name"  },  {    "op": "core/column-removal",    "columnName": "motif_id",    "description": "Remove column motif_id"  },  {    "op": "core/column-removal",    "columnName": "motif_alt_id",    "description": "Remove column motif_alt_id"  },  {    "op": "core/column-move",    "columnName": "sequence_name",    "index": 1,    "description": "Move column sequence_name to position 1"  },  {    "op": "core/column-move",    "columnName": "sequence_name",    "index": 2,    "description": "Move column sequence_name to position 2"  },  {    "op": "core/column-move",    "columnName": "sequence_name",    "index": 3,    "description": "Move column sequence_name to position 3"  },  {    "op": "core/text-transform",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "start",    "expression": "value.toNumber()",    "onError": "keep-original",    "repeat": false,    "repeatCount": 10,    "description": "Text transform on cells in column start using expression value.toNumber()"  },  {    "op": "core/text-transform",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "stop",    "expression": "value.toNumber()",    "onError": "keep-original",    "repeat": false,    "repeatCount": 10,    "description": "Text transform on cells in column stop using expression value.toNumber()"  },  {    "op": "core/column-addition",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "baseColumnName": "peak_start",    "expression": "grel:value+cells['start'].value",    "onError": "set-to-blank",    "newColumnName": "FIMO_motif_start",    "columnInsertIndex": 2,    "description": "Create column FIMO_motif_start at index 2 based on column peak_start using expression grel:value+cells['start'].value"  },  {    "op": "core/column-addition",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "baseColumnName": "peak_start",    "expression": "grel:value+cells['stop'].value",    "onError": "set-to-blank",    "newColumnName": "FIMO_motif_stop",    "columnInsertIndex": 2,    "description": "Create column FIMO_motif_stop at index 2 based on column peak_start using expression grel:value+cells['stop'].value"  },  {    "op": "core/column-reorder",    "columnNames": [      "chr",      "FIMO_motif_start",      "FIMO_motif_stop",      "sequence_name",      "peak_start",      "peak_end",      "start",      "stop",      "strand",      "score",      "p-value",      "q-value",      "matched_sequence"    ],    "description": "Reorder columns"  }]############################################## change tsv to bed and make sure no weird characters#############################################mv Intersect_Cis_3_GATA1_FIMO35_3_sort.tsv Intersect_Cis_3_GATA1_FIMO35_3_sort.bedcat Intersect_Cis_3_GATA1_FIMO35_3_sort.bed | tr -d '\r' > Intersect_Cis_3_GATA1_FIMO35_3_sorted.bed######################### intersect FIMO and JASPAR######################### get rid of headertail -n +2 Intersect_Cis_3_GATA1_FIMO35_3_sorted.bed > file.tmp && mv file.tmp Intersect_Cis_3_GATA1_FIMO35_3_sort_noheader.bed# sort#!/bin/bash -eu#SBATCH -A LU2022-7-3#SBATCH -n 6#SBATCH -t 04:00:00set -euxo pipefailmodule load GCC/5.4.0-2.26module load OpenMPI/1.10.3module load impi/2017.1.132module load BEDTools/2.26.0cd /home/gloriawu/snic2020-12-1/ChIP/analysis2022/GATA1/intersectbedtools sort -i Intersect_Cis_3_GATA1_FIMO35_3_sort_noheader.bed > Intersect_Cis_3_GATA1_FIMO35_3_noheader_sort.bedbedtools sort -i MA0035.3_GATA1_chr_hg38.bed > MA0035.3_GATA1_chr_hg38_sort.bed# merge#!/bin/bash -eu#SBATCH -A LU2022-7-3#SBATCH -n 6#SBATCH -t 04:00:00set -euxo pipefailmodule load GCC/5.4.0-2.26module load OpenMPI/1.10.3module load impi/2017.1.132module load BEDTools/2.26.0cd /home/gloriawu/snic2020-12-1/ChIP/analysis2022/GATA1/intersectbedtools intersect -wa -wb -a Intersect_Cis_3_GATA1_FIMO35_3_noheader_sort.bed -b MA0035.3_GATA1_chr_hg38_sort.bed > Intersect_with_Cis_3_GATA1_FIMO_JASPAR.bed############################################ clean up with open refine for the FIMO-JASPAR file############################################ Load file, 0 line as column headers, create project# make numbers for the variables need to be calculated# create column to calculate the difference in base pairs between FIMO and JASPAR motif start sites# rename the columns# delete unnecessary columns# rearrange the columns[  {    "op": "core/text-transform",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "Column 2",    "expression": "value.toNumber()",    "onError": "keep-original",    "repeat": false,    "repeatCount": 10,    "description": "Text transform on cells in column Column 2 using expression value.toNumber()"  },  {    "op": "core/text-transform",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "Column 15",    "expression": "value.toNumber()",    "onError": "keep-original",    "repeat": false,    "repeatCount": 10,    "description": "Text transform on cells in column Column 15 using expression value.toNumber()"  },  {    "op": "core/column-addition",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "baseColumnName": "Column 2",    "expression": "grel:value-cells['Column 15'].value",    "onError": "set-to-blank",    "newColumnName": "diff_FIMO_Jaspar",    "columnInsertIndex": 2,    "description": "Create column diff_FIMO_Jaspar at index 2 based on column Column 2 using expression grel:value-cells['Column 15'].value"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 1",    "newColumnName": "chr",    "description": "Rename column Column 1 to chr"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 2",    "newColumnName": "FIMO_start",    "description": "Rename column Column 2 to FIMO_start"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 3",    "newColumnName": "FIMO_stop",    "description": "Rename column Column 3 to FIMO_stop"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 4",    "newColumnName": "sequence_name",    "description": "Rename column Column 4 to sequence_name"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 5",    "newColumnName": "peak_start",    "description": "Rename column Column 5 to peak_start"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 6",    "newColumnName": "peak_end",    "description": "Rename column Column 6 to peak_end"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 7",    "newColumnName": "start",    "description": "Rename column Column 7 to start"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 8",    "newColumnName": "stop",    "description": "Rename column Column 8 to stop"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 9",    "newColumnName": "strand",    "description": "Rename column Column 9 to strand"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 10",    "newColumnName": "FIMO_score",    "description": "Rename column Column 10 to FIMO_score"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 11",    "newColumnName": "FIMO_pValue",    "description": "Rename column Column 11 to FIMO_pValue"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 12",    "newColumnName": "FIMO_qValue",    "description": "Rename column Column 12 to FIMO_qValue"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 13",    "newColumnName": "FIMO_matched_sequence",    "description": "Rename column Column 13 to FIMO_matched_sequence"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 15",    "newColumnName": "JASPAR_start",    "description": "Rename column Column 15 to JASPAR_start"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 16",    "newColumnName": "JASPAR_stop",    "description": "Rename column Column 16 to JASPAR_stop"  },  {    "op": "core/column-removal",    "columnName": "Column 17",    "description": "Remove column Column 17"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 18",    "newColumnName": "JASPAR_score",    "description": "Rename column Column 18 to JASPAR_score"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 14",    "newColumnName": "chromosome",    "description": "Rename column Column 14 to chromosome"  },  {    "op": "core/column-reorder",    "columnNames": [      "chr",      "FIMO_start",      "FIMO_stop",      "FIMO_score",      "FIMO_pValue",      "FIMO_qValue",      "FIMO_matched_sequence",      "chromosome",      "JASPAR_start",      "JASPAR_stop",      "JASPAR_score",      "diff_FIMO_Jaspar",      "sequence_name",      "peak_start",      "peak_end",      "start",      "stop",      "strand"    ],    "description": "Reorder columns"  }]#################################################### clean up with open refine for the intersect file with overlaps#################################################### Load file, 0 line as column headers, create project# split column 4 # remove all other column 4s but keep column 4 8, which is the peak ID# remove column 6 which is single .# rename all fields[  {    "op": "core/column-split",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "Column 4",    "guessCellType": true,    "removeOriginalColumn": true,    "mode": "separator",    "separator": "/",    "regex": false,    "maxColumns": 0,    "description": "Split column Column 4 by separator"  },  {    "op": "core/column-removal",    "columnName": "Column 4 1",    "description": "Remove column Column 4 1"  },  {    "op": "core/column-removal",    "columnName": "Column 4 2",    "description": "Remove column Column 4 2"  },  {    "op": "core/column-removal",    "columnName": "Column 4 3",    "description": "Remove column Column 4 3"  },  {    "op": "core/column-removal",    "columnName": "Column 4 4",    "description": "Remove column Column 4 4"  },  {    "op": "core/column-removal",    "columnName": "Column 4 5",    "description": "Remove column Column 4 5"  },  {    "op": "core/column-removal",    "columnName": "Column 4 6",    "description": "Remove column Column 4 6"  },  {    "op": "core/column-removal",    "columnName": "Column 4 7",    "description": "Remove column Column 4 7"  },  {    "op": "core/column-removal",    "columnName": "Column 6",    "description": "Remove column Column 6"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 1",    "newColumnName": "chr",    "description": "Rename column Column 1 to chr"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 2",    "newColumnName": "peak_start",    "description": "Rename column Column 2 to peak_start"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 3",    "newColumnName": "peak_end",    "description": "Rename column Column 3 to peak_end"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 4 8",    "newColumnName": "sequence_name",    "description": "Rename column Column 4 8 to sequence_name"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 5",    "newColumnName": "peak_score",    "description": "Rename column Column 5 to peak_score"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 7",    "newColumnName": "signal_value",    "description": "Rename column Column 7 to signal_value"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 8",    "newColumnName": "pValue",    "description": "Rename column Column 8 to pValue"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 9",    "newColumnName": "qValue",    "description": "Rename column Column 9 to qValue"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 10",    "newColumnName": "peak_summit",    "description": "Rename column Column 10 to peak_summit"  },  {    "op": "core/column-rename",    "oldColumnName": "Column 11",    "newColumnName": "overlap",    "description": "Rename column Column 11 to overlap"  }]################################################################## clean up the data before working  with intersect cis adult file to annotate in R################################################################## first cut the headertail -n +2 Intersect_with_Cis_3_GATA1_adult_sort.bed > file.tmp && mv file.tmp Intersect_with_Cis_3_GATA1_adult_sort.bed############################################## R program script for annotating, joining, and filtering ############################################## load filesIntersect_with_Cis_3_GATA1_adult_sort.bed <- read.delim("~/Documents/LU/ENCODE/ENCODE/analysis2022/GATA1/intersect/OpenRefine/Intersect_with_Cis_3_GATA1_adult_sort.bed.tsv")# load packageslibrary(rtracklayer)library(Rsamtools)library(BiocManager)BiocManager::install("TxDb.Hsapiens.UCSC.hg38.knownGene")txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene::TxDb.Hsapiens.UCSC.hg38.knownGenelibrary(ChIPpeakAnno)library(ChIPseeker)library(tidyverse)library(dplyr)# try to annotate the file after overlapIntersect_Cis_3_GATA1_adult_sort_peak <- readPeakFile("Intersect_with_Cis_3_GATA1_adult_sort.bed")Intersect_Cis_3_GATA1_adult_sort_peak_annotate <- annotatePeak(Intersect_Cis_3_GATA1_adult_sort_peak, tssRegion = c(-5000, 5000), TxDb = txdb, annoDb = "org.Hs.eg.db")Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df <- data.frame(Intersect_Cis_3_GATA1_adult_sort_peak_annotate)View(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df)# name the columnsnames(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df)[1] <-'Chr'names(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df)[6] <-'sequence_name'names(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df)[7] <-'peak_score'names(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df)[8] <-'signal_value'names(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df)[9] <-'pValue'names(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df)[10] <-'qValue'names(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df)[11] <-'peak_summit'names(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df)[12] <-'overlap'write.csv(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df, file="Intersect_Cis_3_GATA1_adult_sort_peak_annotate.csv")# load the file from FIMO_JASPAR# innerjoin by sequenc_nameIntersect_Cis_3_GATA1_FIMMO_JASPAR_annotate <- inner_join(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df,Intersect_with_Cis_3_GATA1_FIMO_JASPAR_sort, by ='sequence_name')View(Intersect_Cis_3_GATA1_adult_sort_peak_annotate_df)View(Intersect_with_Cis_3_GATA1_FIMO_JASPAR_sort)View(Intersect_Cis_3_GATA1_FIMMO_JASPAR_annotate)  # load gene symbol filebloodgroupgenesymbol <- read.csv("~/Documents/LU/ENCODE/ENCODE/bloodgroupgenesymbol.csv", sep="")View(bloodgroupgenesymbol)# semijoin with blood group genesIntersect_Cis_3_GATA1_FIMO_JASPAR_annotate_blood <- semi_join(Intersect_Cis_3_GATA1_FIMMO_JASPAR_annotate, bloodgroupgenesymbol, by = 'SYMBOL')View(Intersect_Cis_3_GATA1_FIMO_JASPAR_annotate_blood)  write.table(Intersect_Cis_3_GATA1_FIMO_JASPAR_annotate_blood, file ="Intersect_Cis_3_GATA1_FIMO_JASPAR_annotate_blood.tsv", sep = '\t', row.names = FALSE, col.names = TRUE)count(Intersect_Cis_3_GATA1_FIMO_JASPAR_annotate_blood, overlap >='3')count(Intersect_Cis_3_GATA1_FIMO_JASPAR_annotate_blood, overlap ='2')count(Intersect_Cis_3_GATA1_FIMO_JASPAR_annotate_blood, overlap)count(Intersect_Cis_3_GATA1_FIMO_JASPAR_annotate_blood, diff_FIMO_Jaspar)####################################### clean up the annotated data by OpenRefine####################################### Load file and create project# compare the fields for the peak start and end to make sure it’s the same# all 359 end at the same position, and 1 bp difference from the start site# remove unnecessary fields# rename fields[  {    "op": "core/column-removal",    "columnName": "strand.x",    "description": "Remove column strand.x"  },  {    "op": "core/text-transform",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "end",    "expression": "value.toNumber()",    "onError": "keep-original",    "repeat": false,    "repeatCount": 10,    "description": "Text transform on cells in column end using expression value.toNumber()"  },  {    "op": "core/text-transform",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "peak_end",    "expression": "value.toNumber()",    "onError": "keep-original",    "repeat": false,    "repeatCount": 10,    "description": "Text transform on cells in column peak_end using expression value.toNumber()"  },  {    "op": "core/column-addition",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "baseColumnName": "peak_end",    "expression": "grel:value-cells['end'].value",    "onError": "set-to-blank",    "newColumnName": "diff_peak_ends",    "columnInsertIndex": 37,    "description": "Create column diff_peak_ends at index 37 based on column peak_end using expression grel:value-cells['end'].value"  },  {    "op": "core/text-transform",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "peak_start",    "expression": "value.toNumber()",    "onError": "keep-original",    "repeat": false,    "repeatCount": 10,    "description": "Text transform on cells in column peak_start using expression value.toNumber()"  },  {    "op": "core/text-transform",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "columnName": "start.x",    "expression": "value.toNumber()",    "onError": "keep-original",    "repeat": false,    "repeatCount": 10,    "description": "Text transform on cells in column start.x using expression value.toNumber()"  },  {    "op": "core/column-addition",    "engineConfig": {      "facets": [],      "mode": "row-based"    },    "baseColumnName": "start.x",    "expression": "grel:value-cells['peak_start'].value",    "onError": "set-to-blank",    "newColumnName": "diff_peak_starts",    "columnInsertIndex": 2,    "description": "Create column diff_peak_starts at index 2 based on column start.x using expression grel:value-cells['peak_start'].value"  },  {    "op": "core/column-removal",    "columnName": "diff_peak_starts",    "description": "Remove column diff_peak_starts"  },  {    "op": "core/column-removal",    "columnName": "diff_peak_ends",    "description": "Remove column diff_peak_ends"  },  {    "op": "core/column-removal",    "columnName": "peak_start",    "description": "Remove column peak_start"  },  {    "op": "core/column-removal",    "columnName": "peak_end",    "description": "Remove column peak_end"  },  {    "op": "core/column-removal",    "columnName": "start.y",    "description": "Remove column start.y"  },  {    "op": "core/column-removal",    "columnName": "stop",    "description": "Remove column stop"  },  {    "op": "core/column-rename",    "oldColumnName": "start.x",    "newColumnName": "peak_start",    "description": "Rename column start.x to peak_start"  },  {    "op": "core/column-rename",    "oldColumnName": "end",    "newColumnName": "peak_end",    "description": "Rename column end to peak_end"  },  {    "op": "core/column-rename",    "oldColumnName": "width",    "newColumnName": "peak_width",    "description": "Rename column width to peak_width"  },  {    "op": "core/column-rename",    "oldColumnName": "signal_value",    "newColumnName": "peak_signal_value",    "description": "Rename column signal_value to peak_signal_value"  },  {    "op": "core/column-rename",    "oldColumnName": "pValue",    "newColumnName": "peak_pValue",    "description": "Rename column pValue to peak_pValue"  },  {    "op": "core/column-rename",    "oldColumnName": "qValue",    "newColumnName": "peak_qValue",    "description": "Rename column qValue to peak_qValue"  },  {    "op": "core/column-rename",    "oldColumnName": "strand.y",    "newColumnName": "strand",    "description": "Rename column strand.y to strand"  },  {    "op": "core/column-rename",    "oldColumnName": "chr",    "newColumnName": "FIMO_chr",    "description": "Rename column chr to FIMO_chr"  },  {    "op": "core/column-rename",    "oldColumnName": "chromosome",    "newColumnName": "JASPAR_chr",    "description": "Rename column chromosome to JASPAR_chr"  }]